C51 COMPILER V9.54   OLED                                                                  09/24/2024 11:55:01 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\OLED.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE OLED.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\OLED
                    -.lst) OBJECT(.\Objects\OLED.obj)

line level    source

   1          #include "Config.h"
   2          #include "OLED_CONT.h"
   3          
   4          
   5          #define OLED_CMD 0 //写命令
   6          #define OLED_DATA 1 //写数据
   7          #define Max_Column  128
   8          #define SIZE 16
   9          void init_IO()
  10          
  11          {
  12   1      
  13   1         RSTCFG=0x50;  //开启RST键进入ISP模式
  14   1      
  15   1         P0M1 = 0x00;   P0M0 = 0x00;   //设置P0口为准双向口
  16   1      
  17   1         P2M1 = 0x00;   P2M0 = 0x00;   //设置P1口为准双向口
  18   1      
  19   1         P3M1 = 0x00;   P3M0 = 0x00;   //设置P3口为准双向口
  20   1      
  21   1      }
  22          void init_IIC()
  23          {
  24   1      
  25   1         P_SW2|=0x10;//p24、25
  26   1      
  27   1         I2CCFG=0xe0;
  28   1      
  29   1      }
  30          
  31          void IIC_wait()
  32          {
  33   1      
  34   1         while(!(I2CMSST&0x40));//等待
  35   1      
  36   1         I2CMSST&=~0x40;//软清零
  37   1      
  38   1      }
  39          
  40          void IIC_START()
  41          {
  42   1      
  43   1         I2CMSCR=0x01;
  44   1      
  45   1         IIC_wait();
  46   1      
  47   1      }
  48          
  49          void IIC_SendData(u8 dat)
  50          {
  51   1      
  52   1         I2CTXD=dat;
  53   1      
  54   1         I2CMSCR=0x02;
C51 COMPILER V9.54   OLED                                                                  09/24/2024 11:55:01 PAGE 2   

  55   1         
  56   1         IIC_wait();
  57   1      
  58   1      }
  59          
  60          void IIC_RevAck()
  61          {
  62   1      
  63   1         I2CMSCR=0x03;
  64   1      
  65   1         IIC_wait();
  66   1      
  67   1      }
  68          
  69          void IIC_STOP()
  70          
  71          {
  72   1      
  73   1         I2CMSCR=0x06;
  74   1      
  75   1         IIC_wait();
  76   1      
  77   1      }
  78          
  79          //cmd:数据/命令标志 0：表示命令;1：表示数据;
  80          void OLED_WR_Byte(u8 dat,u8 cmd)
  81          
  82          {  
  83   1      
  84   1         IIC_START();
  85   1      
  86   1         IIC_SendData(0x78);//OLED屏地址码0x78
  87   1      
  88   1         IIC_RevAck();
  89   1      
  90   1         if(cmd==0)
  91   1         {
  92   2      
  93   2            IIC_SendData(0x00);
  94   2      
  95   2            IIC_RevAck();
  96   2      
  97   2         }
  98   1      
  99   1         else
 100   1         {
 101   2      
 102   2            IIC_SendData(0x40);
 103   2      
 104   2            IIC_RevAck();
 105   2      
 106   2         }
 107   1      
 108   1         IIC_SendData(dat);
 109   1      
 110   1         IIC_RevAck();
 111   1      
 112   1         IIC_STOP();
 113   1      
 114   1      }
 115          
 116          
C51 COMPILER V9.54   OLED                                                                  09/24/2024 11:55:01 PAGE 3   

 117          /*下面的抄的网络资源*/
 118          //设置显示坐标位置
 119          void OLED_Set_Pos(u8 x, u8 y)
 120          {
 121   1         OLED_WR_Byte(0xb0+y,OLED_CMD);
 122   1      
 123   1         OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
 124   1      
 125   1         OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD);
 126   1      }       
 127          
 128          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
 129          void OLED_Clear(void) 
 130          { 
 131   1      
 132   1         u8 i,n;       
 133   1      
 134   1         for(i=0;i<8;i++) 
 135   1      
 136   1         { 
 137   2      
 138   2            OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
 139   2      
 140   2            OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置—列低地址
 141   2      
 142   2            OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置—列高地址  
 143   2      
 144   2            for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA);
 145   2      
 146   2         } //更新显示
 147   1      }
 148          
 149          //在指定位置显示一个字符,包括部分字符
 150          //x:0~127
 151          
 152          //y:0~63
 153          
 154          //mode:0,反白显示;1,正常显示        
 155          
 156          //size:选择字体 16/12
 157          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 158          {       
 159   1      
 160   1         unsigned char c=0,i=0;
 161   1      
 162   1         c=chr-' ';//得到偏移后的值       
 163   1      
 164   1         if(x>Max_Column-1){x=0;y=y+2;}
 165   1      
 166   1         if(SIZE==16)
 167   1      
 168   1         {
 169   2      
 170   2            OLED_Set_Pos(x,y); 
 171   2      
 172   2            for(i=0;i<8;i++)
 173   2      
 174   2            OLED_WR_Byte(OLED_F8x16[c*16+i],OLED_DATA);
 175   2      
 176   2            OLED_Set_Pos(x,y+1);
 177   2      
 178   2            for(i=0;i<8;i++)
C51 COMPILER V9.54   OLED                                                                  09/24/2024 11:55:01 PAGE 4   

 179   2      
 180   2            OLED_WR_Byte(OLED_F8x16[c*16+i+8],OLED_DATA);
 181   2      
 182   2         }
 183   1      
 184   1          /*这里有SIZE==8的，我直接删了*/
 185   1      }
 186          
 187          //显示一个字符号串
 188          
 189          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 190          
 191          {
 192   1      
 193   1         u8 j=0;
 194   1      
 195   1         while (chr[j]!='\0')
 196   1      
 197   1         {   
 198   2            OLED_ShowChar(x,y,chr[j]);
 199   2      
 200   2            x+=8;
 201   2      
 202   2            if(x>120){x=0;y+=2;}
 203   2      
 204   2            j++;
 205   2      
 206   2         }
 207   1      
 208   1      }
 209          
 210          //初始化SSD1306                
 211          
 212          void OLED_Init(void)
 213          
 214          {
 215   1      
 216   1         OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 217   1      
 218   1         OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 219   1      
 220   1         OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 221   1      
 222   1         OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 223   1      
 224   1         OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 225   1      
 226   1         OLED_WR_Byte(0xCF,OLED_CMD); // Set SEG Output Current Brightness
 227   1      
 228   1         OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 229   1      
 230   1         OLED_WR_Byte(0xC8,OLED_CMD);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 231   1      
 232   1         OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 233   1      
 234   1         OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 235   1      
 236   1         OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 237   1      
 238   1         OLED_WR_Byte(0xD3,OLED_CMD);//-set display offset Shift Mapping RAM Counter (0x00~0x3F)
 239   1      
 240   1         OLED_WR_Byte(0x00,OLED_CMD);//-not offset
C51 COMPILER V9.54   OLED                                                                  09/24/2024 11:55:01 PAGE 5   

 241   1      
 242   1         OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 243   1      
 244   1         OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 245   1      
 246   1         OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
 247   1      
 248   1         OLED_WR_Byte(0xF1,OLED_CMD);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 249   1      
 250   1         OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 251   1      
 252   1         OLED_WR_Byte(0x12,OLED_CMD);
 253   1      
 254   1         OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 255   1      
 256   1         OLED_WR_Byte(0x40,OLED_CMD);//Set VCOM Deselect Level
 257   1      
 258   1         OLED_WR_Byte(0x20,OLED_CMD);//-Set Page Addressing Mode (0x00/0x01/0x02)
 259   1      
 260   1         OLED_WR_Byte(0x02,OLED_CMD);//
 261   1      
 262   1         OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 263   1      
 264   1         OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 265   1      
 266   1         OLED_WR_Byte(0xA4,OLED_CMD);// Disable Entire Display On (0xa4/0xa5)
 267   1      
 268   1         OLED_WR_Byte(0xA6,OLED_CMD);// Disable Inverse Display On (0xa6/a7)
 269   1      
 270   1         OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 271   1      
 272   1         OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/
 273   1      
 274   1         OLED_Clear();
 275   1      
 276   1         OLED_Set_Pos(0,0);
 277   1      
 278   1      } 
 279          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    512    ----
   CONSTANT SIZE    =   1520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
